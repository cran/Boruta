% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Boruta.R
\name{Boruta}
\alias{Boruta}
\alias{Boruta.default}
\alias{ResumeBoruta}
\alias{Boruta.formula}
\title{Feature selection with the Boruta algorithm}
\usage{
Boruta(x, ...)

\method{Boruta}{default}(x, y, pValue = 0.01, mcAdj = c("bonferroni",
  "fdr", "none"), maxRuns = 100, doTrace = 0, holdHistory = TRUE,
  getImp = getImpRfZ, percentile = 1, ...)

ResumeBoruta(checkpoint, x, y, maxAdditionalRuns = 10,
  numPriorRuns = nrow(checkpoint$ImpHistory), pValue = 0.01,
  mcAdj = c("bonferroni", "fdr", "none"), doTrace = 0,
  holdHistory = TRUE, getImp = getImpRfZ, percentile = 1, ...)

\method{Boruta}{formula}(formula, data = .GlobalEnv, ...)
}
\arguments{
\item{x}{data frame of predictors.}

\item{...}{additional parameters passed to \code{getImp}.}

\item{y}{response vector; factor for classification, numeric vector for regression, \code{Surv} object for survival (supports depends on importance adapter capabilities).}

\item{pValue}{confidence level. Default value should be used.}

\item{mcAdj}{If set to "bonferroni", a multiple comparisons adjustment using the Bonferroni method will be applied. 
If set to "fdr" will use the two-step correction using Benjamini Hochberg FDR as described in https://github.com/scikit-learn-contrib/boruta_py. 
Older (1.x and 2.x) versions of Boruta were effectively using "none."}

\item{maxRuns}{maximal number of importance source runs.
You may increase it to resolve attributes left Tentative.}

\item{doTrace}{verbosity level. 0 means no tracing, 1 means reporting decision about each attribute as soon as it is justified, 2 means the same as 1, plus reporting each importance source run, 3 means the same as 2, plus reporting of hits assigned to yet undecided attributes.}

\item{holdHistory}{if set to \code{TRUE}, the full history of importance is stored and returned as the \code{ImpHistory} element of the result.
Can be used to decrease a memory footprint of Boruta in case this side data is not used, especially when the number of attributes is huge; yet it disables plotting of such made \code{Boruta} objects and the use of the \code{\link{TentativeRoughFix}} function.}

\item{getImp}{function used to obtain attribute importance.
The default is getImpRfZ, which runs random forest from the \code{ranger} package and gathers Z-scores of mean decrease accuracy measure.
It should return a numeric vector of a size identical to the number of columns of its first argument, containing importance measure of respective attributes.
Any order-preserving transformation of this measure will yield the same result.
It is assumed that more important attributes get higher importance. +-Inf are accepted, NaNs and NAs are treated as 0s, with a warning.}

\item{percentile}{Instead of the max we use the percentile defined by the user, 
to pick our threshold for comparison between shadow and real features. The max tend to be too stringent. 
This provides a finer control over this. The lower perc is the more false positives will be picked as relevant 
but also the less relevant features will be left out. The usual trade-off. The default is essentially the vanilla 
Boruta corresponding to the max.}

\item{checkpoint}{Boruta object with which to resume training..}

\item{maxAdditionalRuns}{Maximum number of additional importance source runs.}

\item{numPriorRuns}{Number of runs previously attempted. Not needed if the checkpoint Boruta object contains importance history.}

\item{formula}{alternatively, formula describing model to be analysed.}

\item{data}{in which to interpret formula.}
}
\value{
An object of class \code{Boruta}, which is a list with the following components:
\item{finalDecision}{a factor of three value: \code{Confirmed}, \code{Rejected} or \code{Tentative}, containing final result of feature selection.}
\item{ImpHistory}{a data frame of importances of attributes gathered in each importance source run.
Beside predictors' importances, it contains maximal, mean and minimal importance of shadow attributes in each run.
Rejected attributes get \code{-Inf} importance.
Set to \code{NULL} if \code{holdHistory} was given \code{FALSE}.}
\item{timeTaken}{time taken by the computation.}
\item{impSource}{string describing the source of importance, equal to a comment attribute of the \code{getImp} argument.}
\item{call}{the original call of the \code{Boruta} function.}
}
\description{
Boruta is an all relevant feature selection wrapper algorithm, capable of working with any classification method that output variable importance measure (VIM); by default, Boruta uses Random Forest.
The method performs a top-down search for relevant features by comparing original attributes' importance with importance achievable at random, estimated using their permuted copies, and progressively eliminating irrelevant features to stabilise that test.

Resume feature selection from Boruta object.
}
\details{
Boruta iteratively compares importances of attributes with importances of shadow attributes, created by shuffling original ones.
Attributes that have significantly worst importance than shadow ones are being consecutively dropped.
On the other hand, attributes that are significantly better than shadows are admitted to be Confirmed.
Shadows are re-created in each iteration.
Algorithm stops when only Confirmed attributes are left, or when it reaches \code{maxRuns} importance source runs.
If the second scenario occurs, some attributes may be left without a decision.
They are claimed Tentative.
You may try to extend \code{maxRuns} or lower \code{pValue} to clarify them, but in some cases their importances do fluctuate too much for Boruta to converge.
Instead, you can use \code{\link{TentativeRoughFix}} function, which will perform other, weaker test to make a final decision, or simply treat them as undecided in further analysis.

See \code{\link{Boruta}} for details of the feature selection algorithm. 
Run Boruta and then pass in that object to resume feature selection, when
features remain tentative.
}
\examples{
set.seed(777)
#Add some nonsense attributes to iris dataset by shuffling original attributes
iris.extended<-data.frame(iris,apply(iris[,-5],2,sample))
names(iris.extended)[6:9]<-paste("Nonsense",1:4,sep="")
#Run Boruta on this data
Boruta(Species~.,data=iris.extended,doTrace=2)->Boruta.iris.extended
#Nonsense attributes should be rejected
print(Boruta.iris.extended)

#Boruta using rFerns' importance
Boruta(Species~.,data=iris.extended,getImp=getImpFerns)->Boruta.ferns.irisE
print(Boruta.ferns.irisE)

\dontrun{
#Boruta on the HouseVotes84 data from mlbench
library(mlbench); data(HouseVotes84)
na.omit(HouseVotes84)->hvo
#Takes some time, so be patient
Boruta(Class~.,data=hvo,doTrace=2)->Bor.hvo
print(Bor.hvo)
plot(Bor.hvo)
plotImpHistory(Bor.hvo)
}
\dontrun{
#Boruta on the Ozone data from mlbench
library(mlbench); data(Ozone)
library(randomForest)
na.omit(Ozone)->ozo
Boruta(V4~.,data=ozo,doTrace=2)->Bor.ozo
cat('Random forest run on all attributes:\\n')
print(randomForest(V4~.,data=ozo))
cat('Random forest run only on confirmed attributes:\\n')
print(randomForest(ozo[,getSelectedAttributes(Bor.ozo)],ozo$V4))
}
\dontrun{
#Boruta on the Sonar data from mlbench
library(mlbench); data(Sonar)
#Takes some time, so be patient
Boruta(Class~.,data=Sonar,doTrace=2)->Bor.son
print(Bor.son)
#Shows important bands
plot(Bor.son,sort=FALSE)
}
set.seed(777)
#Add some nonsense attributes to iris dataset by shuffling original attributes
iris.extended<-data.frame(iris,apply(iris[,-5],2,sample))
names(iris.extended)[6:9]<-paste("Nonsense",1:4,sep="")
#Run Boruta on this data
Boruta.iris.extended <- Boruta(y = iris.extended$Species, x = iris.extended[,-which(colnames(iris.extended) == "Species")], doTrace=2)
#Nonsense attributes should be rejected, except 1
print(Boruta.iris.extended)
Boruta.iris.extended2 <- ResumeBoruta(y = iris.extended$Species, x = iris.extended[,-which(colnames(iris.extended) == "Species")], checkpoint = Boruta.iris.extended, maxAdditionalRuns=1000, doTrace=2)
#Last nonsense attribute shoudl be confirmed important.
print(Boruta.iris.extended)
print(Boruta.iris.extended2)
}
\references{
Miron B. Kursa, Witold R. Rudnicki (2010). Feature Selection with the Boruta Package.
\emph{Journal of Statistical Software, 36(11)}, p. 1-13.
URL: \url{http://www.jstatsoft.org/v36/i11/}
}
